// Generated by CoffeeScript 1.11.1
(function() {
  var Generator;

  Generator = (function() {
    function Generator(title1, config) {
      var ref, ref1, ref10, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;
      this.title = title1;
      this.preload = [];
      this.config = config;
      this.layers = [
        {
          title: 'background',
          channel: 'v.background',
          defaultUrl: this.content_url(config.forcebackgroundurl, config),
          loop: true,
          fadeIn: (ref = config.backgroundfadein) != null ? ref : 0,
          fadeOut: (ref1 = config.backgroundfadeout) != null ? ref1 : 0,
          insetTop: (ref2 = config.backgroundInsetTop) != null ? ref2 : 0,
          insetBottom: (ref3 = config.backgroundInsetBottom) != null ? ref3 : 0,
          insetLeft: (ref4 = config.backgroundInsetLeft) != null ? ref4 : 0,
          insetRight: (ref5 = config.backgroundInsetRight) != null ? ref5 : 0,
          crossfade: false
        }, {
          title: 'animation',
          channel: 'v.animate',
          defaultUrl: this.content_url(config.noanimationurl, config),
          loop: false,
          fadeIn: 0,
          fadeOut: 0,
          crossfade: true
        }, {
          title: 'weather',
          channel: 'v.weather',
          loop: true,
          fadeIn: (ref6 = config.weatherfadein) != null ? ref6 : 0,
          fadeOut: (ref7 = config.weatherfadeout) != null ? ref7 : 0,
          crossfade: true
        }, {
          title: 'muzicode',
          channel: 'v.mc',
          loop: false,
          fadeIn: (ref8 = config.muzicodefadein) != null ? ref8 : 0,
          fadeOut: (ref9 = config.muzicodefadeout) != null ? ref9 : 0,
          holdTime: (ref10 = config.muzicodeholdtime) != null ? ref10 : null,
          crossfade: true
        }
      ];
      this.add(config.forcebackgroundurl);
      this.add(config.noanimationurl);
      this.add(config.no_url);
      this.add(config.defaultmuzicodeurl);
      this.add(config.rain_url);
      this.add(config.snow_url);
      this.add(config.sun_url);
      this.add(config.storm_url);
      this.add(config.wind_url);
    }

    Generator.prototype.content_url = function(url, config) {
      if ((url != null) && (config.contenturi != null) && (url.indexOf(':')) < 0 && (url.substring(0, 1)) !== '/') {
        return config.contenturi + url;
      } else {

      }
      return url;
    };

    Generator.prototype.get = function() {
      return {
        title: this.title,
        generated: (new Date()).toISOString(),
        preload: this.preload,
        layers: this.layers
      };
    };

    Generator.prototype.add = function(url) {
      url = this.content_url(url, this.config);
      if ((url != null) && (this.preload.indexOf(url)) < 0) {
        return this.preload.push(url);
      }
    };

    return Generator;

  })();

  module.exports.generator = function(title, config) {
    return new Generator(title, config);
  };

  module.exports.BACKGROUND = 'v.background';

  module.exports.ANIMATION = 'v.animation';

  module.exports.WEATHER = 'v.weather';

  module.exports.MUZICODE = 'v.muzicode';

}).call(this);
